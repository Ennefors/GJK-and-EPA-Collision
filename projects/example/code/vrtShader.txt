#version 430
 
layout(location=0) in vec3 pos;
layout(location=1) in vec2 UV;
layout(location=2) in vec3 norm;
 
layout(location=0) out vec2 uv;
layout(location=1) out vec3 vertPos;
layout(location=2) out vec3 NORM;
layout(location=3) out vec4 lightpos;
layout(location=4) out vec4 speccolor;
 
uniform mat4 rotation, normalMat;
 
uniform vec4 lightPos, specColor, diffuseColor;
 
void main()
{

    uv.x = UV.x;
    uv.y = 1 - UV.y;
    vec4 vertPos4 = rotation * vec4(pos, 1);
    gl_Position = rotation * vec4(pos, 1);
    vertPos = vec3(vertPos4) /vertPos4.w;
    NORM = vec3(normalMat * vec4(norm, 0.0));
    lightpos = lightPos;
    speccolor = specColor;

}